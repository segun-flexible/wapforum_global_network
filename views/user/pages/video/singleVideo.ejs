<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="apple-touch-icon" sizes="76x76" href="<%=websiteDetails.website_favicon %>">
    <link rel="icon" type="image/png" href="<%=websiteDetails.website_favicon %>">

    <meta content="<%= websiteDetails.website_description %>" name="description">
    <title>
        <%=title%> - <%=websiteDetails.website_tagline %>
    </title>
    <link href="/css/user/css/custom.css" rel="stylesheet" />

    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
    <!-- Nucleo Icons -->
    <link href="/css/user/css/nucleo-icons.css" rel="stylesheet" />
    <link href="/css/user/css/nucleo-svg.css" rel="stylesheet" />
    <link href="/css/user/css/nucleo-svg.css" rel="stylesheet" />
    <!-- CSS Files -->
    <link id="pagestyle" href="/css/user/css/soft-ui-dashboard.css?v=1.0.3" rel="stylesheet" />


</head>

<body>

    <main class="main-content position-relative max-height-vh-100 h-100 mt-1 border-radius-lg ">

        <div class="container-fluid">
        
            <!-- start page title -->
            <br>
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box">
                        <h4 class="page-title">
                            <%= title %>
                        </h4>
                    </div>
                </div>
            </div>
        
        
        
            <div class="row">
                <div class="col-12">
                    <div class="wrapper">
                       
                            <!DOCTYPE html>
                            <html>
        
                            <body>
                                <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
                                <div id="player" class="embed-responsive embed-responsive-21by9"></div>
        
                                <script>
                                    let datas = {
                                        duration: parseInt('<%=video.v_watch_sec %>'),
                                        id: parseInt('<%=video.v_id %>'),
                                        time: parseInt('<%=video.v_watch_sec %>'),
                                        interval: null,
                                        state: false
                                    };

                                    //Update Views
                                    fetch(window.location.href, {
                                        method: "PUT",
                                        credentials: "include",
                                        mode: "cors",
                                        headers: {
                                            "content-type": "application/json"
                                        }

                                    }).then(res => { })
                                        .catch(err => console.log(err))

                                    // 2. This code loads the IFrame Player API code asynchronously.
                                    var tag = document.createElement('script');

                                    tag.src = "https://www.youtube.com/iframe_api";
                                    var firstScriptTag = document.getElementsByTagName('script')[0];
                                    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                                    // 3. This function creates an <iframe> (and YouTube player)
                                    //    after the API code downloads.
                                    var player;
                                    function onYouTubeIframeAPIReady() {
                                        player = new YT.Player('player', {
                                            height: '400',
                                            width: '640',
                                            videoId: '<%=video.v_youtube_id %>',
                                            events: {
                                                'onReady': onPlayerReady,
                                                'onStateChange': onPlayerStateChange
                                            }
                                        });
                                    }

                                    // 4. The API will call this function when the video player is ready.
                                    function onPlayerReady(event) {
                                        event.target.playVideo();
                                    }

                                    // 5. The API calls this function when the player's state changes.
                                    //    The function indicates that when playing a video (state=1),
                                    //    the player should play for six seconds and then stop.

                                    function onPlayerStateChange(event) {
                                        if (event.data == YT.PlayerState.PLAYING) {

                                            if (!datas.state) {
                                                datas.state = true;
                                                datas.interval = setInterval(() => {
                                                    if (datas.time > 0) {
                                                        datas.time -= 1;
                                                        updateCounterUi(datas.time)

                                                        if (datas.time === 0) {

                                                            fetch(window.location.href, {
                                                                method: "POST",
                                                                credentials: "include",
                                                                mode: "cors",
                                                                headers: {
                                                                    "content-type": "application/json"
                                                                }

                                                            }).then(res => res.json())
                                                                .then(res => {
                                                                    if (res.status) {
                                                                        swal({
                                                                            title: res.message,
                                                                            icon: "success"
                                                                        });
                                                                        playSound();
                                                                        updateCounterUi(res.message)
                                                                    } else {
                                                                        swal({
                                                                            title: res.message,
                                                                            icon: "error"
                                                                        });
                                                                        updateCounterUi(res.message)
                                                                    }
                                                                })
                                                                .catch(err => {
                                                                    swal({
                                                                        title: "Something went wrong!",
                                                                        icon: "error"
                                                                    });
                                                                })
                                                            clearInterval(datas.interval)
                                                        }
                                                    }
                                                }, 1000)
                                            }


                                        } else {
                                            clearInterval(datas.interval)
                                            datas.state = false
                                        }
                                    }
                                    function stopVideo() {
                                        player.stopVideo();
                                    }

                                    function updateCounterUi(text) {
                                        document.querySelector("button.timer").textContent = text
                                    }

                                    function playSound() {
                                        document.querySelector("audio#audio").play()
                                    }
                                </script>
        
                                <div class="meta d-flex justify-content-end">
                                    
                                    <button class="btn btn-secondary btn-lg timer">
                                        <%= video.v_watch_sec %>
                                    </button>
                                </div>
                            </body>
        
                            </html>
                    </div>
                    
                </div>
            </div>
        
        
        </div>

    </main>

    <audio src="/mp3/alert.mp3" hidden id="audio"></audio>
    <script src="/js/partials/sweetalert.js"></script>
</body>

</html>